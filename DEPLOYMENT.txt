uwsgi --reload /tmp/safe-pidfile.pid (EVERYTIME AFTER CODE CHANGES/TAKE A PULL)
sudo service nginx restart (when chagning nginx settings)
sqldump HeritageCraft > craftbackup.sql
download the sql backup
sql_restore CraftLocal < craftbackup.sql

1. Create Django Project
test locally
keep two settings file for seperate allowed hosts and databases (0.0.0.0 and sqlite3 for dev) and (domain name and mysql/mariadb for prod)
use pip freeze and add the packages you installed yourself to requirements.txt
add pycache, venv, sqlite, idea to .gitignore
upload django project to git

buy linode server with the latest ubuntu version LTS support (set domain and add a cname record as 'api' with alias to '@')
buy domain (set all linode nameservers to domain nameservers) wait for propagation

2. Create react project, test apis with django dev locally and upload to git.

_________________

Start ssh session (configure ssh session from tools using host ip, username password to linode)

sudo apt-update
sudo apt-upgrade
sudo apt install python3.10-venv
python3 -m venv venv
sudo nano ~/.profile (append `source venv/bin/activate`) #save and close the file
source ~/.profile
restart terminal and check if venv is automatically activated
git --version (if available good otherwise install git)
cd /var/www
git clone yourprojectname
pip install -r yourprojectname/requirements.txt
sudo apt install nginx
nginx --version
sudo service nginx start
sudo service nginx status
sudo apt install mysql
sudo service mysql status
sudo apt-get install libmysqlclient-dev build-essential
install mysqlclient or add it to requirements.txt and then install that way

------------

cat /etc/mysql/mysql.conf.d/mysqld.cnf
sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf (change bind-address to 0.0.0.0) #save and close
bind-address = 127.0.0.1    ===>>>   bind-address = 0.0.0.0
sudo service mysql restart
sudo ufw allow from <server-ip> to any port 3306

-------------

link = https://www.digitalocean.com/community/tutorials/how-to-allow-remote-access-to-mysql

#login to mysql
mysql
# then run the following
> CREATE USER '<new_username>'@'<server_ip>' IDENTIFIED BY '<password>';
> GRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on . TO 'new_username'@'<server_ip>' WITH GRANT OPTION;
> GRANT ALL PRIVILEGES on  *.* TO 'new_username'@'<server_ip>' WITH GRANT OPTION;
> CREATE DATABASE <new_database>;
> FLUSH PRIVILEGES;
> exit

try connecting with Mysqlworkbench remotely using username and password


-----------

make the following changes in prod settings of django project

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '<new_database>',
        'USER': '<new_username>',
        'PASSWORD': '<password>',
        'HOST': '50.116.7.254',
        'PORT': '3306',
    }
}

python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser (for django admin)
python manage.py runserver (check yourip:8000 to confirm django is running)

pip install uwsgi
mkdir /etc/uwsgi
mkdir /var/log/uwsgi/

sudo nano /etc/uwsgi/<yourprojectname>.ini

[uwsgi]
virtualenv=/root/venv
#uid = www-data
#gid = www-data
chmod-socket = 666
processes = 4
master = true
memory-report = true
threads = 4
chdir = /root/var/www/<yourprojectname>
env = DJANGO_SETTINGS_MODULE=<yourprojectname>.settings
module = <yourprojectname>.wsgi
socket = /tmp/<yourprojectname>.sock
stats = /tmp/stats.socket
logto = /var/log/uwsgi/access.log
daemonize = /var/log/uwsgi/access.log
safe-pidfile = /tmp/safe-pidfile.pid

#save and close file

uwsgi --ini /etc/uwsgi/<yourprojectname>.ini
sudo service nginx restart

sudo nano /etc/nginx/sites-available/HeritageCraft.conf

upstream django {
    server unix:///tmp/HeritageCraft.sock; # for a file socket
}


server {
    listen api.heritagecraft.pk:80;
    server_name api.heritagecraft.pk;
    charset     utf-8;

    client_max_body_size 75M;

    location /media  {
        alias /var/www/HeritageCraft/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /var/www/HeritageCraft/staticfiles; # your Django project's static files - amend as required
    }

    location / {
        uwsgi_pass django;
        include /etc/nginx/uwsgi_params;
        uwsgi_ignore_client_abort on;
        uwsgi_connect_timeout 60;
        uwsgi_read_timeout 60;
        uwsgi_send_timeout 60;
    }
}

#save and close file

ln -s /etc/nginx/sites-available/<yourprojectname>.conf /etc/nginx/sites-enabled/<yourprojectname>.conf

sudo service nginx restart
